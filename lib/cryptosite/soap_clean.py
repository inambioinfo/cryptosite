#!/usr/bin/env python

from __future__ import print_function, absolute_import
from modeller import *
from modeller.scripts import complete_pdb
from modeller import soap_protein_od
import glob, sys, os

def main():
    env = environ()
    env.libs.topology.read(file='$(LIB)/top_heav.lib')
    env.libs.parameters.read(file='$(LIB)/par.lib')

    # Set up SOAP-Protein-OD scoring (note: if assessing multiple models, it is
    # best to create sp' just once and keep it around, since reading in the
    # potential from disk can take a long time).
    sp = soap_protein_od.Scorer()

    #out = open('soap_scores_tt1_%s.scores' % sys.argv[-1],'w')
    out = open('SnapList.txt','w')

    cnt = 0
    #for fil in glob.glob('tt1/pred_dECALCrAS1000/*/*.pdb'):
    files = [i for i in glob.glob('pm.pdb*.pdb') if 'pm.pdb.B10010002.pdb' not in i]
    for fil in files:

	try:
	    cnt += 1
	    # Read a model previously generated by Modeller's automodel class
	    mdl = complete_pdb(env, fil)
	    # Select all atoms in the first chain
	    atmsel = selection(mdl)

	    # Assess with the above Scorer
	    try:
		score = atmsel.assess(sp)
		out.write(fil+'\t'+str(score)+'\n')
	    except ModellerError:
		print("The SOAP-Protein-OD library file is not included with MODELLER.")
		print("Please get it from http://salilab.org/SOAP/.")
	except: pass

    out.close()

if __name__ == '__main__':
    main()
